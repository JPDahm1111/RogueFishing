RogueFishing
Changelog by JPD
—————————————————————————————————————————————
Build naming convention:
(Month)(Day)(Year)(Build designation)
Ex: 010203a
“i” is representative of an initial build of a NEW version.
After “i” comes a-h then j-z
After z comes aa, bb, cc etc. (including ii) 

- Versions, starting from v0.1, denote major change. 
- Multiple builds released in one day will get more letters, ex: 010203a, 010203b.
- The date is in relation to when the build was first started!
—————————————————————————————————————————————
Changelog:

v0.1, 030525i :
Laid down the basic foundations for creating the game:
- created the player character, represented with @
- spawned the player
- made the player controllable
- made multiple specialized files to perform tasks such as drawing the player character to controlling it

v0.1, 030525a :
Major overhaul to EVERYTHING!!!
- created new files, entity.py and engine.py responsible for setting up entities and managing them as well as creating maps respectively. 
- modified main.py to be more lightweight and delegate tasks
- created tile_types.py, this file manages tiles and tile properties
- created game_map.py which manages the game map (doesn’t draw it, that’s engine’s job)
- modified main.py to support the newly created engine and map
	-main.py’s modifications allow for a map to be created with certain parameters, like length/width!
- modified the newly created engine to support the gamemap file
- engine handles the map like this: handle_events is called to determine details about a tile and render draws it

v0.1, 030625a :
- changed changelog from rtf to txt
- updated changeling build convention info

v0.1, 030725a :
- Modified "dejavu" font elements, characters changed:
	-@, changed to a character
	-$, changed to fish

v0.11, 030825i :
- Functional procedural map generation is implemented! 
- addeded procgen.py to handle procedural generation
- modified main.py to accomidate procgen
- modified game_map.py to accomidate procgen
- The game will now procedurally generate a map when main.py is run. The player will be intellignetly placed on a valid tile.

v0.11, 030925a :
- modified game_map.py (using arrays) calculates FOV and stores discovered portions of the caves, this heavily utilizes TCOD features!
- modified tyle_types.py to add new "light" and "dark" tiles, these tiles are for parts of the dungeon that have been discovered or are yet to be discovered/ in sight and out of sight
- added shroud which acts as a fog of war for undiscovered parts
- modified the game engine to support the new light and dark tiles as well as the shroud mechanic

v0.11, 031025a -Intelligent entity spawning :
- Entities now spawn inside rooms!
- Basic framework for attacks and enemy moves set up!
- Modified engine.py to accomidate new entities
- modified main.py to remove placeholder entities and old spawning system
- modified engine.py to remove entity rendering
	-gamemap.py now is responisble for this
- modified procgen.py to associate the player with entities 
- added new parameters to the procgen system in main.py (max entities per room)
- Modified entity.py to support the new entity spawning system
- created entity_factories.py, which acts as a conduit for entities and allows for the various entities to be defined and customized! 
- added basic melee attack abilities in actions.py
- changed action type in input_handlers.py from "MovementAction" to "BumpAction" to support more potential interactions such as attacks

v0.12, 031225i - Rework and attack basics :
- The tutorial used some outdated syntax, these fixes should stop non fatal futureproofing 
errors
- This should also optimize the game and make it run significantly better 
- Set up groundwork for combat
- Reworked/futureproofed actions.py
- Reworked/futureproofed input_handlers.py
- Reworked/futureproofed game_map.py
- Reworked/futureproofed main.py
- Reworked/futureproofed entity.py
- Reworked/futureproofed procgen.py
- Reworked/futureproofed engine.py
- Created new components folder in the root, this contains information relating to combat and enemy ai
- Modified entity.py to accomidate new AI
- added new hostile ai framework
- modified entity_factories to add new parameters for NPC types such as ai type
- modified npc ai to only attack in 4 cardinal directions
- made attacks deal damage
- made the player and enemies able to die
- added render_order.py which allows us to determine the order in which npcs/entities are drawn
- added basic health bar
- Death config in fighter.py
- Player attribute framework in fighter.py

v0.12, 031325a 
- Modified credits across most files to be more descriptive
- Commented up the files in the folder "components" which were added in v.12 031225i
- Commented up entity_factories.py to make it's new capabilities more clear
- Modified fontsheet to add new custom entity sprites

v0.12, 031325b - UI and modernization changes
- added color.py which manages color for ui elements
- added message_log.py which outputs terminal messages ingame to emulate classic roguelikes
- modified engine.py to support the new ingame log
- modified main.py to support new log
- modified fighter.py to support new log
- modified actions.py to support new log
- updated syntax in engine.py
- added the ability to store mouse location in engine.py
- mouse support and function to display info about entities in the log when the mouse is over them!
- most of mouse code is in input_handlers.py
- scroll through log possible!
- press "v" to see full log!

v0.12, 031425a - Inventory and items!
-NOTE TO ME: GO HERE TO ADD MORE ENTITIES!
- modified (modernized i guess) ai.py to remove errors (in components folder)
- modified message_log.py to remove errors
- modified game_map.py to remove errors
- modified entity.py
- modified base_component.py (in components folder)
- modified fighter.py (in components folder)
- addded new colors to color.py for UI
- created healing function in fighter.py
- created execeptions.py to manage special/unusual events...or exceptions!
- modified main.py to accomidate new exceptions
- modified input_handlers.py to accomidate new exceptions
- modified engine.py to accomidate new exceptions
- modified entity.py to support a new entity subclass for items
	- I will probably do something similar for making water!
- added consumable support to actions.py
- added health potion to entity_factories.py
- modified PROCGEN.PY to now spawn health potions!
- modified main.py to add new item spawning parameters
- created inventory.py to manage inventory 
- modified entity.py to support inventory
- added new inventory parameter to entity_factories.py
- modified actions.py to allow items to be picked up
- G key picks stuff up!
- D key drops items!
- I opens inventory

v0.12, 031725a 
- added credits.txt to make credited authors more clear 
- modified readme.md to update copyright information 

v0.12, 031725b
- changed placeholder "troll" and "orc" into "Cave Horror" and "Fallen Fisher" 
- Tweaked world-gen settings, the caves should now have far more diversity and complexity in generation 

v0.12, 031725c
- added randomly generated messages!
	- these messages are currently used for kills and deaths
- created a general use function based on random that prints random messages, these can be used for anything!

v0.12, 031725d 
- modified line of code in fighter.py which would produce an error when a certain number was generated for a death message

v0.12, 031725e - ranged weapons
- added new UI colors to color.py
- Added single shot muskets that deal massive damage
- added new musket sprite to the spritesheet
- added "enter" keybind class, these keys confirm actions
- added targeting controls for ranged weapons
- new "look" mode controlled by mouse which is activated by pressing "/"
- added new single shot blunderbuss with an AOE attack, be careful, due to the nature of the caves if you shoot close to yourself your bound to be hit by ricochets!

v0.12, 031925a - Save Files
- added new colors to color.py
- added new action handler system to input_handlers.py, this part is completely above me but it should allow for save file stuff to work.
- modified main.py to support new menus/saves n such
- added new file: setup_game.py
	- this file manages the main menu!
- modified engine.py to support new save system
- removed parameters from main.py
	- generally trimmed main.py down significantly 
- added save and load functions to setup_game.py
- added lzma, pickle andddddd traceback to support file saving/loading
- created RogueFishing.gitignore for my own dev uses
- Game setup parameters moved to setup_game.py
- TO DO: 
	- make menu nicer
	- random splash text!
	- make the menu screen art not look god awful
	- make more sprites
	- make placeholder friendly NPC using confused AI
	- make musket use different mechanics (current ones are abysmal lol) 

v0.13, 032025i - Exploration and Progression!
- added new title screen that replaces the WIP version
- added new colors
- modified old colors
- > is set as the new passageway
- push ">" to travel through the passage (you may have to hold shift)
- this new passageway is in tile_types.py
- modified both procgen.py and game_map.py to spawn the new passages
- modifed engine.py to add the new cave section
- actions.py was modifed to enable passage system
- render_functions.py modified 
- the current floor is currently displayed 
- added new level.py file
	- this manages exp and the leveling system
- modified entity.py to use new leveling system
- modified entity_factories.py to use new leveling system
- added character information to input_handlers.py
	-press "c" to see this

v0.13, 032025a - minor changes

v0.13, 032725a - increasing difficulty (Based on part 12 of roguelike tutorials)
- modified procgen.py
	- used tuples to change entity spawns on each "floor"
- new system makes previous spawning systems outdated
	- removed traces of old spawning systems:
		- gamemap.py
		- procgen.py 
		- setup_game.py
- added spawining parameters to procgen.py 
- added spawning increase, ex more of a certain thing spawns the higher you go in the caves
- will tweak and customize these in next update, for now they're the default numbers from the tutoral.



